#!groovy
pipeline {
  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
  }
  agent any
  stages {
    stage('Build') {
      steps {
        script {
          sh '''
            SBI/build.sh
          '''
        }
      }
    }
    stage('Test') {
      steps {
        script {
          sh '''
            SBI/test.sh
          '''
        }
      }
    }
    stage('Docker Image Build') {
      steps {
        script {
          sh '''
           echo "building image"
                      '''
        }
      }
    }
stage('Push To ECR') {
      steps {
        script {
          sh '''
            echo "Pushing it to ECR"
                      '''
        }
      }
    }
stage('Deploy Image to ECS') {
      steps {
        script {
          sh '''
           echo "Deploying Image to ECS"
                      '''
        }
      }
      }
	  stage("Publish Reports") {
		//  when {
      //  expression {
        //  return new File("$WORKSPACE/jenkins-cucumber-results/cucumber-report*.json").exists()
      //  }
     // }
		  steps
		  {
			  step([
                    $class: 'CucumberReportPublisher',
	            failedFeaturesNumber: 0,
                    failedScenariosNumber: 0,
                    failedStepsNumber: 0,
                    fileExcludePattern: '',
                    fileIncludePattern: '**/cucumber-report*.json',
                    jsonReportDirectory: 'examples',
	            parallelTesting: true,
                    pendingStepsNumber: 0,
                    skippedStepsNumber: 0,
                    trendsLimit: 0,
                    undefinedStepsNumber: 0,
		    classifications: getClassifications()
                   ])
            }
	  }
}
}
