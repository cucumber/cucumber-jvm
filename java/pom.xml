<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-jvm</artifactId>
        <version>4.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>cucumber-java</artifactId>
    <packaging>jar</packaging>
    <name>Cucumber-JVM: Java</name>

    <dependencies>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-i18n-sources</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="maven.plugin.classpath" />

                                <groovy><![CDATA[
import groovy.text.SimpleTemplateEngine
import gherkin.GherkinDialect
import gherkin.GherkinDialectProvider

def engine = new SimpleTemplateEngine()
def templateSource = new File(project.baseDir, "src${File.separator}main${File.separator}code_generator${File.separator}I18n.java.txt").getText()

def normalize(s) {
  if(System.getProperty("java.version").startsWith("1.6")) {
    return s
  } else {
    return java.text.Normalizer.normalize(s, java.text.Normalizer.Form.NFC)
  }
}

def localeFor(lang) {
  languageAndCountry = lang.split("-")
  if (languageAndCountry.length == 1) {
    return new Locale(lang)
  } else {
    return new Locale(languageAndCountry[0], languageAndCountry[1])
  }
}

// TODO: Need to add i18n.getName() and i18n.getNative() for better names.
def package_html = """\
<body>
<p>
    \${locale.getDisplayLanguage()}
</p>
</body>
"""

def unsupported = ["em"] // The generated files for Emoij do not compile.
def dialectProvider = new GherkinDialectProvider()

GherkinDialectProvider.DIALECTS.keySet().each { language ->
  def dialect = dialectProvider.getDialect(language, null)
  def normalized_language = dialect.language.replaceAll("[\\s-]", "_").toLowerCase()
  if (!unsupported.contains(normalized_language)) {
    dialect.stepKeywords.findAll { !it.contains('*') && !it.matches("^\\d.*") }.unique().each { kw ->
      def normalized_kw = normalize(kw.replaceAll("[\\s',!\u00AD]", ""))
      def binding = ["lang":normalized_language, "kw":normalized_kw]
      def template = engine.createTemplate(templateSource).make(binding)
      def file = new File(project.baseDir, "target${File.separator}generated-sources${File.separator}i18n${File.separator}java${File.separator}cucumber${File.separator}api${File.separator}java${File.separator}${normalized_language}${File.separator}${normalized_kw}.java")
      if(!file.exists()) {
        // Haitian has two translations that only differ by case - Sipozeke and SipozeKe
        // Some file systems are unable to distiguish between them and overwrite the other one :-(
        file.parentFile.mkdirs()
        file.write(template.toString(), "UTF-8")
      }
    }

    // html
    def locale = localeFor(dialect.language)
    def binding = ["locale":locale]
    def html = engine.createTemplate(package_html).make(binding).toString()
    def file = new File(project.baseDir, "target${File.separator}generated-sources${File.separator}i18n${File.separator}java${File.separator}cucumber${File.separator}api${File.separator}java${File.separator}${normalized_language}${File.separator}package.html")
    file.write(html, "UTF-8")
  }
}
        ]]></groovy>

                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/target/generated-sources/i18n/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
