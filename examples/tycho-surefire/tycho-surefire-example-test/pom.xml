<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.cucumber</groupId>
        <artifactId>tycho-surefire</artifactId>
        <version>3.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>tycho-surefire-example-test</artifactId>
    <packaging>eclipse-test-plugin</packaging>
    <name>Examples: Tycho: Calculator Test Fragment</name>

    <dependencies>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-osgi</artifactId>
            <exclusions>
	            <exclusion>
		            <groupId>org.ops4j.pax.exam</groupId>
		            <artifactId>pax-exam</artifactId>
	            </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>  
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                
                <!-- 
                Copy dependencies to a lib directory so they can be included on 
                the classpath in the build runtime 
                -->
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>false</excludeTransitive>
                            <excludeGroupIds>p2.eclipse-plugin</excludeGroupIds>
                            <includeScope>runtime</includeScope>
                            <includeTypes>jar</includeTypes>
                            <outputDirectory>lib</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                    
                    <!--
                    In order for the Cucumber OsgiClassFinder to find the 
                    Cucumber annotation classes, they must be explicitly listed 
                    as classes in the OSGi bundle.  So, they're being 
                    extracted from the cucumber jar and included in the 
                    plugin test jar file.
                    This example only extracts the English ones.  You only need 
                    to extract the classes for the language(s) in which your 
                    feature files are written.
                    -->
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>io.cucumber</groupId>
                                    <artifactId>cucumber-java</artifactId>
                                    <version>${project.version}</version>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                    <includes>cucumber/api/java/Before.class, cucumber/api/java/After.class, cucumber/api/java/en/*.class</includes>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>lib</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
